import vk_api
import json

class VKUserInfoBot:
    def __init__(self, user_token):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é —Å —Ç–æ–∫–µ–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.vk_session = vk_api.VkApi(token=user_token)
        self.vk = self.vk_session.get_api()
    
    def get_user_info(self, user_id):
        """
        –ü–æ–ª—É—á–∞–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ VK
        """
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            user_info = self.vk.users.get(
                user_ids=user_id,
                fields='first_name,last_name,bdate,sex,city,country,photo_max_orig,' +
                       'education,universities,schools,career,activities,interests,' +
                       'music,movies,tv,books,games,about,quotes,contacts,relation,' +
                       'home_town,domain,site,status,last_seen,online,counters'
            )
            
            if not user_info:
                return "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–∫—Ä—ã—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏"
                
            user_info = user_info[0]
            
            return self.format_user_info(user_info)
            
        except Exception as e:
            return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {e}"
    
    def format_user_info(self, user_info):
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥
        """
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
        if 'first_name' not in user_info:
            return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ. –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–∫—Ä—ã—Ç."
        
        # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        result = f"""
üë§ –û–°–ù–û–í–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:
‚Ä¢ ID: {user_info.get('id', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}
‚Ä¢ –ò–º—è: {user_info.get('first_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
‚Ä¢ –§–∞–º–∏–ª–∏—è: {user_info.get('last_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
‚Ä¢ –ü–æ–ª–Ω–æ–µ –∏–º—è: {user_info.get('first_name', '')} {user_info.get('last_name', '')}
‚Ä¢ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {user_info.get('bdate', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}
‚Ä¢ –ü–æ–ª: {self.get_sex(user_info.get('sex'))}
‚Ä¢ –°–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ: {self.get_relation(user_info.get('relation'))}
‚Ä¢ –ì–æ—Ä–æ–¥: {self.get_city_name(user_info)}
‚Ä¢ –°—Ç—Ä–∞–Ω–∞: {self.get_country_name(user_info)}
‚Ä¢ –†–æ–¥–Ω–æ–π –≥–æ—Ä–æ–¥: {user_info.get('home_town', '–ù–µ —É–∫–∞–∑–∞–Ω')}
‚Ä¢ –°—Ç–∞—Ç—É—Å: {user_info.get('status', '–ù–µ —É–∫–∞–∑–∞–Ω')}
‚Ä¢ –°–∞–π—Ç: {user_info.get('site', '–ù–µ —É–∫–∞–∑–∞–Ω')}
‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç: {self.get_last_seen(user_info)}
‚Ä¢ –û–Ω–ª–∞–π–Ω: {'–î–∞' if user_info.get('online') else '–ù–µ—Ç'}
"""
        
        # –°—á–µ—Ç—á–∏–∫–∏ (–¥—Ä—É–∑—å—è, –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ –∏ —Ç.–¥.)
        counters = user_info.get('counters', {})
        if counters:
            result += f"""
üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:
‚Ä¢ –î—Ä—É–∑–µ–π: {counters.get('friends', 0)}
‚Ä¢ –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {counters.get('followers', 0)}
‚Ä¢ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {counters.get('photos', 0)}
‚Ä¢ –í–∏–¥–µ–æ–∑–∞–ø–∏—Å–µ–π: {counters.get('videos', 0)}
‚Ä¢ –ê—É–¥–∏–æ–∑–∞–ø–∏—Å–µ–π: {counters.get('audios', 0)}
‚Ä¢ –ì—Ä—É–ø–ø: {counters.get('groups', 0)}
"""
        
        # –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
        education_info = self.get_education_info(user_info)
        result += f"\nüéì –û–ë–†–ê–ó–û–í–ê–ù–ò–ï:\n{education_info}"
        
        # –ö–∞—Ä—å–µ—Ä–∞
        career_info = self.get_career_info(user_info)
        result += f"\nüíº –ö–ê–†–¨–ï–†–ê:\n{career_info}"
        
        # –ò–Ω—Ç–µ—Ä–µ—Å—ã
        interests_info = self.get_interests_info(user_info)
        result += f"\nüé≠ –ò–ù–¢–ï–†–ï–°–´ –ò –£–í–õ–ï–ß–ï–ù–ò–Ø:\n{interests_info}"
        
        # –ö–æ–Ω—Ç–∞–∫—Ç—ã
        contacts_info = self.get_contacts_info(user_info)
        result += f"\nüìû –ö–û–ù–¢–ê–ö–¢–´:\n{contacts_info}"
        
        # –°—Å—ã–ª–∫–∏
        domain = user_info.get('domain', f"id{user_info['id']}")
        result += f"""
üîó –°–°–´–õ–ö–ò:
‚Ä¢ –§–æ—Ç–æ: {user_info.get('photo_max_orig', '–ù–µ –¥–æ—Å—Ç—É–ø–Ω–æ')}
‚Ä¢ –ü—Ä–æ—Ñ–∏–ª—å: https://vk.ru/{domain}
"""
        
        return result
    
    def get_sex(self, sex_code):
        sex_map = {1: '–ñ–µ–Ω—Å–∫–∏–π', 2: '–ú—É–∂—Å–∫–æ–π', 0: '–ù–µ —É–∫–∞–∑–∞–Ω'}
        return sex_map.get(sex_code, '–ù–µ —É–∫–∞–∑–∞–Ω')
    
    def get_relation(self, relation_code):
        relation_map = {
            1: '–ù–µ –∂–µ–Ω–∞—Ç/–ù–µ –∑–∞–º—É–∂–µ–º',
            2: '–ï—Å—Ç—å –¥—Ä—É–≥/–ï—Å—Ç—å –ø–æ–¥—Ä—É–≥–∞',
            3: '–ü–æ–º–æ–ª–≤–ª–µ–Ω/–ü–æ–º–æ–ª–≤–ª–µ–Ω–∞',
            4: '–ñ–µ–Ω–∞—Ç/–ó–∞–º—É–∂–µ–º',
            5: '–í—Å—ë —Å–ª–æ–∂–Ω–æ',
            6: '–í –∞–∫—Ç–∏–≤–Ω–æ–º –ø–æ–∏—Å–∫–µ',
            7: '–í–ª—é–±–ª—ë–Ω/–í–ª—é–±–ª–µ–Ω–∞',
            8: '–í –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–º –±—Ä–∞–∫–µ',
            0: '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
        }
        return relation_map.get(relation_code, '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
    
    def get_last_seen(self, user_info):
        if 'last_seen' in user_info:
            from datetime import datetime
            timestamp = user_info['last_seen']['time']
            return datetime.fromtimestamp(timestamp).strftime('%Y-%m-%d %H:%M:%S')
        return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
    
    def get_city_name(self, user_info):
        if 'city' in user_info and isinstance(user_info['city'], dict):
            return user_info['city'].get('title', '–ù–µ —É–∫–∞–∑–∞–Ω')
        return '–ù–µ —É–∫–∞–∑–∞n'
    
    def get_country_name(self, user_info):
        if 'country' in user_info and isinstance(user_info['country'], dict):
            return user_info['country'].get('title', '–ù–µ —É–∫–∞–∑–∞–Ω')
        return '–ù–µ —É–∫–∞–∑–∞–Ω'
    
    def get_education_info(self, user_info):
        info = []
        
        # –í—ã—Å—à–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
        if 'universities' in user_info and user_info['universities']:
            for uni in user_info['universities']:
                uni_info = f"‚Ä¢ {uni.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}"
                if uni.get('faculty_name'):
                    uni_info += f", {uni['faculty_name']}"
                if uni.get('graduation'):
                    uni_info += f" (–≤—ã–ø—É—Å–∫ {uni['graduation']})"
                info.append(uni_info)
        
        # –®–∫–æ–ª—ã
        if 'schools' in user_info and user_info['schools']:
            for school in user_info['schools']:
                school_info = f"‚Ä¢ {school.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}"
                if school.get('year_graduation'):
                    school_info += f" (–≤—ã–ø—É—Å–∫ {school['year_graduation']})"
                if school.get('year_from'):
                    school_info += f", —Å {school['year_from']}"
                info.append(school_info)
        
        # –û–±—â–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
        if user_info.get('education_form'):
            info.append(f"‚Ä¢ –§–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è: {user_info['education_form']}")
        if user_info.get('education_status'):
            info.append(f"‚Ä¢ –°—Ç–∞—Ç—É—Å: {user_info['education_status']}")
        
        return "\n".join(info) if info else "‚Ä¢ –ù–µ —É–∫–∞–∑–∞–Ω–æ"
    
    def get_career_info(self, user_info):
        info = []
        
        if 'career' in user_info and user_info['career']:
            for job in user_info['career']:
                job_info = f"‚Ä¢ {job.get('company', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}"
                if job.get('position'):
                    job_info += f", {job['position']}"
                if job.get('city_name'):
                    job_info += f" ({job['city_name']})"
                if job.get('year_from'):
                    job_info += f", —Å {job['year_from']}"
                info.append(job_info)
        
        return "\n".join(info) if info else "‚Ä¢ –ù–µ —É–∫–∞–∑–∞–Ω–æ"
    
    def get_interests_info(self, user_info):
        info = []
        
        interests_map = {
            'activities': '–î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
            'interests': '–ò–Ω—Ç–µ—Ä–µ—Å—ã',
            'music': '–ú—É–∑—ã–∫–∞',
            'movies': '–§–∏–ª—å–º—ã',
            'tv': '–¢–í –ø–µ—Ä–µ–¥–∞—á–∏',
            'books': '–ö–Ω–∏–≥–∏',
            'games': '–ò–≥—Ä—ã',
            'quotes': '–¶–∏—Ç–∞—Ç—ã',
            'about': '–û —Å–µ–±–µ'
        }
        
        for field, title in interests_map.items():
            if user_info.get(field):
                content = user_info[field]
                # –û–±—Ä–µ–∑–∞–µ–º —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã
                if len(content) > 200:
                    content = content[:200] + "..."
                info.append(f"‚Ä¢ {title}: {content}")
        
        return "\n".join(info) if info else "‚Ä¢ –ù–µ —É–∫–∞–∑–∞–Ω–æ"
    
    def get_contacts_info(self, user_info):
        info = []
        
        contacts_map = {
            'mobile_phone': '–ú–æ–±–∏–ª—å–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω',
            'home_phone': '–î–æ–º–∞—à–Ω–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω',
            'skype': 'Skype',
            'facebook': 'Facebook',
            'twitter': 'Twitter',
            'instagram': 'Instagram'
        }
        
        for field, title in contacts_map.items():
            if user_info.get(field):
                info.append(f"‚Ä¢ {title}: {user_info[field]}")
        
        return "\n".join(info) if info else "‚Ä¢ –ù–µ —É–∫–∞–∑–∞–Ω–æ"
    
    def run_console_mode(self):
        """
        –ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –≤ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ
        """
        print("VK Info Bot –∑–∞–ø—É—â–µ–Ω –≤ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ")
        print("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ '–≤—ã—Ö–æ–¥' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è")
        print("–ü—Ä–∏–º–µ—Ä—ã: id1, durov, 123456789")
        
        while True:
            user_input = input("\n–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ").strip()
            
            if user_input.lower() in ['–≤—ã—Ö–æ–¥', 'exit', 'quit']:
                print("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
                break
                
            if not user_input:
                continue
                
            print("\n" + "="*80)
            print(self.get_user_info(user_input))
            print("="*80)

# –í–∞—à —Ç–æ–∫–µ–Ω VK (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π)
USER_TOKEN = "token"

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
if __name__ == "__main__":
    print("VK User Info Bot")
    print("=" * 50)
    
    if USER_TOKEN and USER_TOKEN != "–≤–∞—à_—Ç–æ–∫–µ–Ω_–∑–¥–µ—Å—å":
        try:
            bot = VKUserInfoBot(USER_TOKEN)
            bot.run_console_mode()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞: {e}")
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ –¥–æ—Å—Ç—É–ø–∞")
    else:
        print("–û–®–ò–ë–ö–ê: –¢–æ–∫–µ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω!")
        print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–º–µ–Ω–∏—Ç–µ '–≤–∞—à_—Ç–æ–∫–µ–Ω_–∑–¥–µ—Å—å' –Ω–∞ –≤–∞—à –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω VK")
        print("\n–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω:")
        print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: https://oauth.vk.com/authorize?client_id=6121396&display=page&redirect_uri=https://oauth.vk.com/blank.html&scope=friends,photos,status,offline&response_type=token&v=5.131")
        print("2. –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é")
        print("3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ token –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ (—á–∞—Å—Ç—å –º–µ–∂–¥—É access_token= –∏ &expires_in)")
        print("4. –í—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é USER_TOKEN")
